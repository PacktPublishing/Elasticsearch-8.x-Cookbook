#Mapping base types
PUT test

DELETE test

PUT test/_doc/1
{"name":"Paul", "age":35}

GET test/_mapping

PUT test/_mapping
{
  "properties" : {
    "id" : {"type" : "keyword"},
    "date" : {"type" : "date"},
    "customer_id" : {"type" : "keyword"},
    "sent" : {"type" : "boolean"},
    "name" : {"type" : "keyword"},
    "quantity" : {"type" : "integer"},
    "vat" : {"type" : "double", "index":"false"}
  }
}

# Managing a child document with a join field

PUT test

PUT test/_mapping
{
  "properties": {
    "join_field": {
      "type": "join",
      "relations": {
        "order": "item"
      }
    },
    "id": {
      "type": "keyword",
      "store": "true"
    },
    "date": {
      "type": "date"
    },
    "customer_id": {
      "type": "keyword",
      "store": "true"
    },
    "sent": {
      "type": "boolean"
    },
    "name": {
      "type": "text"
    },
    "quantity": {
      "type": "integer"
    },
    "price": {
      "type": "double"
    },
    "vat": {
      "type": "double"
    }
  }
}


PUT test/_doc/1?refresh
{
  "id": "1",
  "date": "2018-11-16T20:07:45Z",
  "customer_id": "100",
  "sent": true,
  "join_field": "order" 
}

PUT test/_doc/c1?routing=1&refresh
{
  "name": "tshirt",
  "quantity": 10,
  "price": 4.3,
  "vat": 8.5,
  "join_field": {
    "name": "item", 
    "parent": "1" 
  }
}


PUT test/_mapping
{
  "properties" : {
    "id" : {"type" : "keyword"},
    "date" : {"type" : "date"},
    "customer_id" : {"type" : "keyword"},
    "sent" : {"type" : "boolean"},
    "item" : {"type" : "object",
      "properties" : {
          "name" : {"type" : "keyword"},
          "quantity" : {"type" : "long"},
          "cost" : {"type": "alias", "path":"item.price"},
          "price" : {"type" : "double"},
          "vat" : {"type" : "double"}
        }
    }
  }
}


PUT test/_doc/1?refresh
{
  "id": "1",
  "date": "2018-11-16T20:07:45Z",
  "customer_id": "100",
  "sent": true,
  "item": [
    {
      "name": "tshirt",
      "quantity": 10,
      "price": 4.3,
      "vat": 8.5
    }
  ]
}

GET test/_mapping

GET test/_search
{
  "query": {
    "term" : {
      "item.cost" : 4.3
    }
  }
}

# Mapping a Percolator field

PUT test-percolator
{
  "mappings": {
    "properties": {
      "query" : {
        "type" : "percolator"
      },
      "body" : {
        "type": "text"
       }
     }
   }
}

PUT test-percolator/_doc/1?refresh
{
  "query" : {
    "match" : {
      "body" : "quick brown fox"
    }
  }
}

GET test-percolator/_search
{
  "query": {
    "percolate" : {
      "field" : "query",
      "document" : {
        "body" : "fox jumps over the lazy dog"
      }
    }
  }
}

# Mapping Rank Feature and Feature Vector fields

PUT test-rank
{
  "mappings": {
    "properties": {
      "pagerank": {
        "type": "rank_feature" 
      },
      "url_length": {
        "type": "rank_feature",
        "positive_score_impact": false 
      }
    }
  }
}

PUT test-rank/_doc/1
{
  "pagerank": 5,
  "url_length": 20
}

PUT test-rank/_doc/1
{
  "pagerank": 10,
  "url_length": 15
}


GET test-rank/_search
{
  "query": {
    "rank_feature": {
      "field":"pagerank"
    }
  }
}

PUT test-ranks
{
  "mappings": {
    "properties": {
      "categories": {
        "type": "rank_features" 
      }
    }
  }
}

PUT test-ranks/_doc/1
{
  "categories": { 
    "sport": 14.2,
    "economic": 24.3
  }
}

PUT test-ranks/_doc/2
{
  "categories": {
    "sport": 19.2,
    "economic": 23.1
  }
}

GET test-ranks/_search
{
  "query": {
    "rank_feature": {
      "field": "categories.sport"
    }
  }
}

# Mapping Search as You type field
PUT test-sayt
{
  "mappings": {
    "properties": {
      "title": {
        "type": "search_as_you_type"
      }
    }
  }
}

GET test-sayt

PUT test-sayt/_doc/1
{
  "title": "Ice Age"
}

PUT test-sayt/_doc/2
{
  "title": "The Polar Express"
}

PUT test-sayt/_doc/3
{
  "title": "The Godfather"
}


GET test-sayt/_search
{
  "query": {
    "multi_match": {
      "query": "the p",
      "type": "bool_prefix",
      "fields": [
        "title",
        "title._2gram",
        "title._3gram"
      ]
    }
  }
}

# Using range fields
PUT test-range
{
  "mappings": {
    "properties": {
      "price": {
        "type": "float_range"
      },
      "timeframe": {
        "type": "date_range"
      }
    }
  }
} 

PUT test-range/_bulk
{"index":{"_index":"test-range","_id":"1"}}
{"price":{"gte":1.5,"lt":3.2},"timeframe":{"gte":"2021-01-01T12:00:00","lt":"2021-01-01T12:00:01"}}
{"index":{"_index":"test-range","_id":"2"}}
{"price":{"gte":1.7,"lt":3.7},"timeframe":{"gte":"2021-01-01T12:00:01","lt":"2021-01-01T12:00:02"}}
{"index":{"_index":"test-range","_id":"3"}}
{"price":{"gte":1.3,"lt":3.3},"timeframe":{"gte":"2021-01-01T12:00:02","lt":"2021-01-01T12:00:03"}}

GET test-range/_search
{
  "query": {
    "bool": {
      "filter": [
        {
          "term": {
            "price": {
              "value": 2.4
            }
          }
        },
                {
          "term": {
            "timeframe": {
              "value": "2021-01-01T12:00:02"
            }
          }
        }

      ]
    }
  }
}

# Using Flattened field type (XPACK)
PUT test-flattened
{
  "mappings": {
    "properties": {
      "name": {
        "type": "keyword"
      },
      "configs": {
        "type": "flattened"
      }
    }
  }
} 

PUT test-flattened/_bulk
{"index":{"_index":"test-flattened","_id":"1"}}
{"name":"config1","configs":{"key1":"value1","key3":"2021-01-01T12:00:01"}}
{"index":{"_index":"test-flattened","_id":"2"}}
{"name":"config2","configs":{"key1":true,"key2":30}}
{"index":{"_index":"test-flattened","_id":"3"}}
{"name":"config3","configs":{"key4":"test","key2":30.3}}

POST test-flattened/_search
{
  "query": {
    "term": {
      "configs.key4": "test"
    }
  }
}

# Using Point and Shape field types (XPACK)
DELETE test-point

PUT test-point
{
  "mappings": {
    "properties": {
      "device": {
        "type": "keyword"
      },
      "location": {
        "type": "point"
      }
    }
  }
}

PUT test-point/_bulk
{"index":{"_index":"test-point","_id":"1"}}
{"device":"device1","location":{"x":10,"y":10}}
{"index":{"_index":"test-point","_id":"2"}}
{"device":"device2","location":{"x":10,"y":15}}
{"index":{"_index":"test-point","_id":"3"}}
{"device":"device3","location":{"x":15,"y":10}}

PUT test-shape
{
  "mappings": {
    "properties": {
      "room": {
        "type": "keyword"
      },
      "geometry": {
        "type": "shape"
      }
    }
  }
}


POST test-shape/_doc/1
{
  "room":"hall",
  "geometry" : {
    "type" : "polygon",
    "coordinates" : [
      [ [8.0, 8.0], [8.0, 12.0], [12.0, 12.0], [12.0, 8.0], [8.0, 8.0]]
    ]
  }
}


POST test-point/_search
{
  "query": {
    "shape": {
      "location": {
        "indexed_shape": {
          "index": "test-shape",
          "id": "1",
          "path": "geometry"
        }
      }
    }
  }
}

# Using Dense Vector field type (XPACK)

PUT test-dvector
{
  "mappings": {
    "properties": {
      "vector": {
        "type": "dense_vector",
        "dims": 4
      },
      "model": {
        "type": "keyword"
      }
    }
  }
}


POST test-dvector/_doc/1
{
  "model":"pipe_flood",
  "vector" : [8.1, 8.3, 12.1, 7.32]
}


POST test-dvector/_doc/1
{
  "model":"pipe_flood",
  "vector" : [8.1, 8.3, 12.1]
}


# Using Histogram field type (XPACK)

PUT test-histo
{
  "mappings": {
    "properties": {
      "histogram": {
        "type": "histogram" 
      },
      "model": {
        "type": "keyword"
      }
    }
  }
}


POST test-histo/_doc/1
{
  "model":"show_level",
  "histogram" : {
      "values" : [2016, 2017, 2018, 2019, 2020, 2021], 
      "counts" : [283, 337, 323, 312, 236, 232] 
   }
}


POST test-dvector/_doc/1
{
  "model":"pipe_flood",
  "vector" : [8.1, 8.3, 12.1]
}


PUT _component_template/timestamp-management
{
  "template": {
    "mappings": {
      "properties": {
        "@timestamp": {
          "type": "date"
        }
      }
    }
  }
}

PUT _component_template/order-data
{
  "template": {
    "mappings": {
      "properties": {
        "id": {
          "type": "keyword"
        },
        "date": {
          "type": "date"
        },
        "customer_id": {
          "type": "keyword"
        },
        "sent": {
          "type": "boolean"
        }
      }
    }
  }
}

PUT _component_template/items-data
{
  "template": {
    "mappings": {
      "properties": {
        "item": {
          "type": "object",
          "properties": {
            "name": {
              "type": "keyword"
            },
            "quantity": {
              "type": "long"
            },
            "cost": {
              "type": "alias",
              "path": "item.price"
            },
            "price": {
              "type": "double"
            },
            "vat": {
              "type": "double"
            }
          }
        }
      }
    }
  }
}

PUT _index_template/order
{
  "index_patterns": ["order*"],
  "template": {
    "settings": {
      "number_of_shards": 1
    },
    "mappings": {
      "properties": {
        "id": {
          "type": "keyword"
        }
      }
    },
    "aliases": {
      "order": { }
    }
  },
  "priority": 200,
  "composed_of": ["timestamp-management", "order-data", "items-data"],
  "version": 1,
  "_meta": {
    "description": "My order index template"
  }
}
